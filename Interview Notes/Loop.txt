   Ex:
    
    1) gcd(8,12) = ?
    ==> 2*2 = 8
        2*2*3 = 12
        gcd(8,12) = 4

    2) gcd(25,66) = ? 
    ==> 1*5*5 = 25
        1*2*3*11 = 66
        gcd(25,66) = 1

6) co-prime or relatively prime: they do not have any common factor(only 1 is common factor)

=======================================================================================================
Data Structure And Algorithm:

==> A data structure is a named location that can be used to store and organize data. 
==> an algorithm is a collection of steps to solve a particular problem.
==> Learning data structures and algorithms allow us to write efficient and optimized computer programs.

Q) What are Data Structures?
==> Data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently.
 
Note: Data structure and data types are slightly different. Data structure is the collection of data types arranged in a specific order.

Basically, data structures are divided into two categories:
1) Linear data structure
    ==> Array Data Structure: All the elements of an array are of the same type
    ==> Stack Data Structure: elements are stored in the LIFO principle
    ==> Queue Data Structure: FIFO principle where first element stored in the queue will be removed first
    ==> Linked List Data Structure: 

2) Non-linear data structure
    elements arranged in a hierarchical manner where one element will be connected to one or more elements.
    ==> Graph Data Structure: In graph data structure, each node is called vertex and each vertex is connected to other vertices through edges.
    ==> Trees Data Structure: 
        1) Full Binary Tree: A full Binary tree is a special type of binary tree in which every parent node/internal node has either two or no children.
        2) 

        
Asymptotic Analysis:
 ==> The efficiency of an algorithm depends on the amount of time, storage and other resources required to execute the algorithm
 ==> The efficiency is measured with the help of asymptotic notations.
 ==> An algorithm may not have the same performance for different types of inputs. With the increase in the input size, the performance will change.
 ==> The study of change in performance of the algorithm with the change in the order of the input size is defined as asymptotic analysis.

 Asymptotic Notations:
 ==> Asymptotic notations are the mathematical notations used to describe the running time of an algorithm when the input tends towards a particular value or a limiting value
 ==> For example: In bubble sort, when the input array is already sorted, the time taken by the algorithm is linear i.e. the best case.
 ==> But, when the input array is in reverse condition, the algorithm takes the maximum time (quadratic) to sort the elements i.e. the worst case.
 ==> When the input array is neither sorted nor in reverse order, then it takes average time. These durations are denoted using asymptotic notations.

There are mainly three asymptotic notations:
1) Big-O notation:  Big-O notation represents the upper bound of the running time of an algorithm. Thus, it gives the worst-case complexity of an algorithm.
                    Since it gives the worst-case running time of an algorithm, it is widely used to analyze an algorithm as we are always interested in the worst-case scenario.
2) Omega notation: Omega notation represents the lower bound of the running time of an algorithm. Thus, it provides the best case complexity of an algorithm.
3) Theta notation: used for analyzing the average-case complexity of an algorithm.

Time complexity:
logarithm https://www.youtube.com/watch?v=ntBWrcbAhaY

==> The time Complexity of a loop is considered as O(Logn) if the loop variables are divided/multiplied by a constant amount. Ex: i++
==> The Time Complexity of a loop is considered as O(LogLogn) if the loop variables are reduced/increased exponentially by a constant amount. i = pow(i,2) 


==================================================================================================================================================================================
1) Linear data structures:
==> In linear data structures, the elements are arranged in sequence one after the other. Since elements are arranged in particular order, they are easy to implement.
==> 




8 November 2019  · 
Control Statements Assignment:::
..............................................................
#include<stdio.h>
int main()
{
 if(!printf("Hi\n"))
 printf("Hi\n");
 printf("Hello\n");
 return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int i=4,j=5;
 while(i+1?i--:j++);
 printf("%d",i);
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=30 ;
 while(i > 0)
 { 
 printf("%d\n", i%=5);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int s=0;
while(s++ <= 10)
{
if(s<4 && s<8)
continue;
printf(“s : %d\n”,s);
}
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int a=3,b=3;
while(--a && --b);
printf(“%d,%d\n”,a,b);
return 0;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int i=0, j=0;
while(++i <= 5)
{
while(++j <= 5)
{
printf(“%d\n”,j);
}
printf(“%d\n”,j);
}
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
signed char ch = 125;
while(ch++>0)
{
printf(“%d\n”,++ch);
}
return 0;
}
--------------------------------------------------------
In a for loop, if the condition is missing, then infinite looping cannot be avoided by a
a. continue statement  b. goto statement
c. return statement d. break statement.
Which of the following statements is correct?
a. We can use “strings” as switch cases
b. “break” is mandatory along with “switch”
c. We can use “continue” inside switch
d. None of the above.
Which of the following statements is correct?
a. The inner if statement executes only when outer 
    if statement is true.
b. We can define only one if-statement inside 
    another if-statement
c. We can’t use if-else-if ladder inside the else 
    block.
d. None of the above.
--------------------------------------------------------
#include<stdio.h>
int main()
{
     int a=5,b=10,c=1;
     if(a||b == c)
          printf("if block");
     else
 printf(“else block”);
          break;
return 1;
}
#include<stdio.h>
int main()
{
     int a=-3,b=-3;
     if(++a=++b)
          printf("if block");
     else
          printf("else block");
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
if(4>20)
   printf(“if block”);
else if(3 > 30)
  printf(“else if block2”);
else if(5 > 50)
 printf(“else if block 3”);   
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int n=3;
 if(printf("hello %d",n>=5)-4)
 while(1)
         break;
  else;
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int a=0;
     if(a--)
          printf("if block");
          ++a;
     else
          printf("a = %d",a);
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int x=2,y=3;
      if(x< x++||y< y++)
          printf("%d  %d",x,y);
     else
          printf("else block");
return 1;
}
#include<stdio.h>
{
     int i=4,j=5;
     while(i+1?i--:j++);
          printf("%d",i);
     return 1;
}
int main()
{
int a=3,b=4;
    while(--a && --b);
    printf("b = %d",b);
     return 1;
}
--------------------------------------------------------
#include <stdio.h>
main()
{
  int a=0;
 if(a=8)
 printf("a : %d\n", ++a);
 else
 printf("a : %d\n", --a);
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
        int n = 3, i = 0;
        do {
            n = i++;         
        } while (i != 3);
        printf("%d\n", n);
 return 1;
    }
--------------------------------------------------------
#include<stdio.h>
int main()
{
    if(!printf("Anil"));
    if(printf("Sunil"));
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int x=1;
     if(--x,--x, x--)
          printf("if : %d \n" , ++x);
     else
          printf("else : %d \n" , --x);
 return 1;
}#include<stdio.h>
int main()
{
 int a=4;
 switch(a)
 {
 printf("a : %d \n", a);
 } 
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
float a=3.0;
     switch(++a){
         case 3.0f : printf("float");
                break;
         case 4.0 : printf("double");
                    break;
         case 3.1 : printf("long float");
                    break;
         default:  printf("integer");
     } 
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
  int j=-5;
      for(++j;j++;++j)
      {
          printf("%d ",++j);
          if(j==4)
         break;
     }
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int j;
     for(j=2;j--;j--)
    {
          printf("%d ",j);
          if(j++==1) 
          break;
     }
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int i=6;
int main()
{
 do
 {
 printf("%d",i--);
 }while(i--,--i);
    return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int i=1;
    while(i++);
    printf(“%d”,i);
     return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int a=300,b,c;
 if(a>=400)
 b=300 ;
 c=200 ;
 printf("%d,%d",b,c);
}
--------------------------------------------------------
#include<stdio.h>
void main()
{
     int a=5,b=10;
     if(++a||++b)
          printf("%d  %d",a,b);
     else
          printf("John Terry");
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
short int i = 0;
     for(i<=5 && i>=-1; ++i; i>0)
         printf("%u,", i);
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int i=3;
     switch(i)
     {
          case 1 : printf("Hello\n");
         case 2 : printf("Hi\n");
         case 3 : continue;
         default : printf("Bye\n");
     }
     return 0;
}
main()
{
 signed char ch = 120;
 while(++ch)
 {
 printf("%d\t",ch);
 }
}
--------------------------------------------------------
main()
{
 int a=10 ;
 while(--a +2 >= 1)
 {
 printf("a : %d\n" , a-- + 2);
 --a ;
 }
}
--------------------------------------------------------
main()
{
 int i=0, j=0;
 while(i++ <= 4)
 {
 while(j++ <= 4)
 { 
 } 
 }
 printf("final i : %d\n",i);
 printf("final j : %d\n",j);
}
--------------------------------------------------------
main()
{
int c=0;
for(; (c=printf("hai"))==3;c++)
    printf("bye");
}
--------------------------------------------------------
main()
{
 int i=0;
 for(i=0;i<20;i++)
 {
 switch(i)
 {
  case 0 : i+=5;
 case 1 : i+=2;
 case 5 : i+=5;
 default : i+=4;
 break;
 }
 printf("i=%d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 while(1)
 { 
 }
 printf("Hello\n");
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=3,b=3;
 while(--a && --b)
 {
 printf("%d,%d\n",a,b);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=3,b=3;
 while(--a || ++b)
 {
 printf("%d \t %d \n",a,b);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 signed char ch = 120;
 while(++ch)
 {
 printf("%d\t",ch);
 }
}
--------------------------------------------------------
main()
{
 int i=1;
 do
 {
 printf("i : %d\n",i);
 ++i;
 }while(i>10);
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 unsigned short int a = 25;
 while(a++)
 {
 }
 printf("final a : %d\n",a);
}
#include<stdio.h>
main()
{
 int a=3;
 while(a++ <= 10)
 {
 printf("a : %d\n" , a+3);
 ++a ;
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=10 ;
 while(--a +2 >= 1)
 {
 printf("a : %d\n" , a-- + 2);
 --a ;
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=2, j=3;
 while(i+1 ? --i : j++)
 {
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=2, j=3;
 while(i+1 ? --i : --j)
 {
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=0, j=0;
 while(++i <= 5)
 {
 while(++j <= 5)
 {
 printf("%d\n",j);
 }
 printf("%d\n",j);
 }
}
#include<stdio.h>
main()
{
 int i=0, j=0;
 while(i++ <= 4)
 {
 while(j++ <= 4)
 { 
 } 
 }
 printf("final i : %d\n",i);
 printf("final j : %d\n",j);
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=30 ;
 while(i >= 0)
 {
 printf("%d\n", i%=5);
 }
}
--------------------------------------------------------
main()
{
 int i=1;
 while(i>10)
 {
 printf("i : %d\n",i);
 ++i;
 }
}
--------------------------------------------------------
void main()
{
 int i=-1 , j=1;
 do
 {
 do
 {
 j++;
 }while(j++ <= 3);
 i++;
 }while(i++ < 3);
 printf(" i : %d \n j : %d\n",i,j);
}
--------------------------------------------------------
main()
{
 int i,j;
 for(i=1 ; i<=5 ; i++)
 {
 for(j=1 ; j<=5 ; j++)
 {
 if(i==j)
 break;
 }
 printf("i:%d\tj:%d\n",i,j);
 }
}
--------------------------------------------------------
main()
{
 int i=0;
 for(i=-1 ; i<=11 ; i++)
 {
 if(i<5)
 continue;
 else
 break;
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
main()
{
 int s=0;
 while(s++ <= 10)
 {
 if(s<4 && s<8)
 continue;
 printf("s : %d\n",s);
 }
}
--------------------------------------------------------
main()
{
 int i=6; 
 switch(i)
 {
 default : i+=2;
 case 0 : i=2;
 case 1 : i++;
 case 2 : i+3;
 case 3 : ++i;
 break; 
 }
 printf("i : %d\n",i);
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    short int i = 0;
    for(i<=5 && i>=-1; ++i; i>0)
        printf("%u,", i);
    return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int i=3;
    switch(i)
    {
        case 1 :  printf("Hello\n");
        case 2 :  printf("Hi\n");
        case 3 : continue;
        default :  printf("Bye\n");
    }
    return 0;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int c=0;
for(; (c=printf("hai"))==3;c++)
   printf("bye");
}8 November 2019  · 
Control Statements Assignment:::
..............................................................
#include<stdio.h>
int main()
{
 if(!printf("Hi\n"))
 printf("Hi\n");
 printf("Hello\n");
 return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int i=4,j=5;
 while(i+1?i--:j++);
 printf("%d",i);
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=30 ;
 while(i > 0)
 { 
 printf("%d\n", i%=5);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int s=0;
while(s++ <= 10)
{
if(s<4 && s<8)
continue;
printf(“s : %d\n”,s);
}
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int a=3,b=3;
while(--a && --b);
printf(“%d,%d\n”,a,b);
return 0;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int i=0, j=0;
while(++i <= 5)
{
while(++j <= 5)
{
printf(“%d\n”,j);
}
printf(“%d\n”,j);
}
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
signed char ch = 125;
while(ch++>0)
{
printf(“%d\n”,++ch);
}
return 0;
}
--------------------------------------------------------
In a for loop, if the condition is missing, then infinite looping cannot be avoided by a
a. continue statement  b. goto statement
c. return statement d. break statement.
Which of the following statements is correct?
a. We can use “strings” as switch cases
b. “break” is mandatory along with “switch”
c. We can use “continue” inside switch
d. None of the above.
Which of the following statements is correct?
a. The inner if statement executes only when outer 
    if statement is true.
b. We can define only one if-statement inside 
    another if-statement
c. We can’t use if-else-if ladder inside the else 
    block.
d. None of the above.
--------------------------------------------------------
#include<stdio.h>
int main()
{
     int a=5,b=10,c=1;
     if(a||b == c)
          printf("if block");
     else
 printf(“else block”);
          break;
return 1;
}
#include<stdio.h>
int main()
{
     int a=-3,b=-3;
     if(++a=++b)
          printf("if block");
     else
          printf("else block");
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
if(4>20)
   printf(“if block”);
else if(3 > 30)
  printf(“else if block2”);
else if(5 > 50)
 printf(“else if block 3”);   
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int n=3;
 if(printf("hello %d",n>=5)-4)
 while(1)
         break;
  else;
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int a=0;
     if(a--)
          printf("if block");
          ++a;
     else
          printf("a = %d",a);
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int x=2,y=3;
      if(x< x++||y< y++)
          printf("%d  %d",x,y);
     else
          printf("else block");
return 1;
}
#include<stdio.h>
{
     int i=4,j=5;
     while(i+1?i--:j++);
          printf("%d",i);
     return 1;
}
int main()
{
int a=3,b=4;
    while(--a && --b);
    printf("b = %d",b);
     return 1;
}
--------------------------------------------------------
#include <stdio.h>
main()
{
  int a=0;
 if(a=8)
 printf("a : %d\n", ++a);
 else
 printf("a : %d\n", --a);
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
        int n = 3, i = 0;
        do {
            n = i++;         
        } while (i != 3);
        printf("%d\n", n);
 return 1;
    }
--------------------------------------------------------
#include<stdio.h>
int main()
{
    if(!printf("Anil"));
    if(printf("Sunil"));
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int x=1;
     if(--x,--x, x--)
          printf("if : %d \n" , ++x);
     else
          printf("else : %d \n" , --x);
 return 1;
}#include<stdio.h>
int main()
{
 int a=4;
 switch(a)
 {
 printf("a : %d \n", a);
 } 
 return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
float a=3.0;
     switch(++a){
         case 3.0f : printf("float");
                break;
         case 4.0 : printf("double");
                    break;
         case 3.1 : printf("long float");
                    break;
         default:  printf("integer");
     } 
return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
  int j=-5;
      for(++j;j++;++j)
      {
          printf("%d ",++j);
          if(j==4)
         break;
     }
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int j;
     for(j=2;j--;j--)
    {
          printf("%d ",j);
          if(j++==1) 
          break;
     }
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int i=6;
int main()
{
 do
 {
 printf("%d",i--);
 }while(i--,--i);
    return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int i=1;
    while(i++);
    printf(“%d”,i);
     return 1;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
 int a=300,b,c;
 if(a>=400)
 b=300 ;
 c=200 ;
 printf("%d,%d",b,c);
}
--------------------------------------------------------
#include<stdio.h>
void main()
{
     int a=5,b=10;
     if(++a||++b)
          printf("%d  %d",a,b);
     else
          printf("John Terry");
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
short int i = 0;
     for(i<=5 && i>=-1; ++i; i>0)
         printf("%u,", i);
     return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
int i=3;
     switch(i)
     {
          case 1 : printf("Hello\n");
         case 2 : printf("Hi\n");
         case 3 : continue;
         default : printf("Bye\n");
     }
     return 0;
}
main()
{
 signed char ch = 120;
 while(++ch)
 {
 printf("%d\t",ch);
 }
}
--------------------------------------------------------
main()
{
 int a=10 ;
 while(--a +2 >= 1)
 {
 printf("a : %d\n" , a-- + 2);
 --a ;
 }
}
--------------------------------------------------------
main()
{
 int i=0, j=0;
 while(i++ <= 4)
 {
 while(j++ <= 4)
 { 
 } 
 }
 printf("final i : %d\n",i);
 printf("final j : %d\n",j);
}
--------------------------------------------------------
main()
{
int c=0;
for(; (c=printf("hai"))==3;c++)
    printf("bye");
}
--------------------------------------------------------
main()
{
 int i=0;
 for(i=0;i<20;i++)
 {
 switch(i)
 {
  case 0 : i+=5;
 case 1 : i+=2;
 case 5 : i+=5;
 default : i+=4;
 break;
 }
 printf("i=%d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 while(1)
 { 
 }
 printf("Hello\n");
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=3,b=3;
 while(--a && --b)
 {
 printf("%d,%d\n",a,b);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=3,b=3;
 while(--a || ++b)
 {
 printf("%d \t %d \n",a,b);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 signed char ch = 120;
 while(++ch)
 {
 printf("%d\t",ch);
 }
}
--------------------------------------------------------
main()
{
 int i=1;
 do
 {
 printf("i : %d\n",i);
 ++i;
 }while(i>10);
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 unsigned short int a = 25;
 while(a++)
 {
 }
 printf("final a : %d\n",a);
}
#include<stdio.h>
main()
{
 int a=3;
 while(a++ <= 10)
 {
 printf("a : %d\n" , a+3);
 ++a ;
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int a=10 ;
 while(--a +2 >= 1)
 {
 printf("a : %d\n" , a-- + 2);
 --a ;
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=2, j=3;
 while(i+1 ? --i : j++)
 {
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=2, j=3;
 while(i+1 ? --i : --j)
 {
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=0, j=0;
 while(++i <= 5)
 {
 while(++j <= 5)
 {
 printf("%d\n",j);
 }
 printf("%d\n",j);
 }
}
#include<stdio.h>
main()
{
 int i=0, j=0;
 while(i++ <= 4)
 {
 while(j++ <= 4)
 { 
 } 
 }
 printf("final i : %d\n",i);
 printf("final j : %d\n",j);
}
--------------------------------------------------------
#include<stdio.h>
main()
{
 int i=30 ;
 while(i >= 0)
 {
 printf("%d\n", i%=5);
 }
}
--------------------------------------------------------
main()
{
 int i=1;
 while(i>10)
 {
 printf("i : %d\n",i);
 ++i;
 }
}
--------------------------------------------------------
void main()
{
 int i=-1 , j=1;
 do
 {
 do
 {
 j++;
 }while(j++ <= 3);
 i++;
 }while(i++ < 3);
 printf(" i : %d \n j : %d\n",i,j);
}
--------------------------------------------------------
main()
{
 int i,j;
 for(i=1 ; i<=5 ; i++)
 {
 for(j=1 ; j<=5 ; j++)
 {
 if(i==j)
 break;
 }
 printf("i:%d\tj:%d\n",i,j);
 }
}
--------------------------------------------------------
main()
{
 int i=0;
 for(i=-1 ; i<=11 ; i++)
 {
 if(i<5)
 continue;
 else
 break;
 printf("i : %d\n",i);
 }
}
--------------------------------------------------------
main()
{
 int s=0;
 while(s++ <= 10)
 {
 if(s<4 && s<8)
 continue;
 printf("s : %d\n",s);
 }
}
--------------------------------------------------------
main()
{
 int i=6; 
 switch(i)
 {
 default : i+=2;
 case 0 : i=2;
 case 1 : i++;
 case 2 : i+3;
 case 3 : ++i;
 break; 
 }
 printf("i : %d\n",i);
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    short int i = 0;
    for(i<=5 && i>=-1; ++i; i>0)
        printf("%u,", i);
    return 0;
}
--------------------------------------------------------
#include<stdio.h>
int main()
{
    int i=3;
    switch(i)
    {
        case 1 :  printf("Hello\n");
        case 2 :  printf("Hi\n");
        case 3 : continue;
        default :  printf("Bye\n");
    }
    return 0;
}
--------------------------------------------------------
#include<stdio.h>
main()
{
int c=0;
for(; (c=printf("hai"))==3;c++)
   printf("bye");
}